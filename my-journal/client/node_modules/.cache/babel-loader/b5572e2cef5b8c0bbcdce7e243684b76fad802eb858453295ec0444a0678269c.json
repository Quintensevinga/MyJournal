{"ast":null,"code":"var _jsxFileName = \"/Users/quinten/Documents/MyJournal/my-journal/client/src/pages/favorites/Favorites.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport apiService from '../../apiService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favorites = () => {\n  _s();\n  const [favoriteEntries, setFavoriteEntries] = useState([]);\n  useEffect(() => {\n    const fetchFavoriteEntries = async () => {\n      try {\n        const data = await apiService.getAllFavoriteEntries();\n        setFavoriteEntries(data);\n      } catch (error) {\n        console.error('Error fetching favorite entries:', error);\n      }\n    };\n    fetchFavoriteEntries();\n  }, []);\n  const handleFavoriteClick = async entryId => {\n    const entryToUpdate = favoriteEntries.find(entry => entry._id === entryId);\n    const newFavoriteState = !entryToUpdate.favorite;\n    await apiService.updateSingleJournalEntry(entryId, {\n      favorite: newFavoriteState\n    });\n    const updatedFavoriteEntries = favoriteEntries.map(entry => {\n      if (entry._id === entryId) {\n        return {\n          ...entry,\n          favorite: newFavoriteState\n        };\n      }\n      return entry;\n    });\n    setFavoriteEntries(updatedFavoriteEntries);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"All your favorite journal entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), (favoriteEntries === null || favoriteEntries === void 0 ? void 0 : favoriteEntries.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: favoriteEntries.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"read-journal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"journal-and-date\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: entry.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: entry.created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: entry.mood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `favorite-icon ${entry.favorite ? 'red-heart' : ''}`,\n          onClick: () => {\n            handleFavoriteClick(entry._id);\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHeart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, entry._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No favorite entries to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Favorites, \"mw96nQ9AR9Y9MKn0gPpX6M6L42I=\");\n_c = Favorites;\nexport default Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["React","useEffect","useState","apiService","FontAwesomeIcon","faHeart","jsxDEV","_jsxDEV","Favorites","_s","favoriteEntries","setFavoriteEntries","fetchFavoriteEntries","data","getAllFavoriteEntries","error","console","handleFavoriteClick","entryId","entryToUpdate","find","entry","_id","newFavoriteState","favorite","updateSingleJournalEntry","updatedFavoriteEntries","map","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","content","created","mood","onClick","icon","_c","$RefreshReg$"],"sources":["/Users/quinten/Documents/MyJournal/my-journal/client/src/pages/favorites/Favorites.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport apiService from '../../apiService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\n\nconst Favorites = () => {\n  const [favoriteEntries, setFavoriteEntries] = useState([]);\n\n  useEffect(() => {\n    const fetchFavoriteEntries = async () => {\n      try {\n        const data = await apiService.getAllFavoriteEntries();\n        setFavoriteEntries(data);\n      } catch (error) {\n        console.error('Error fetching favorite entries:', error);\n      }\n    };\n    fetchFavoriteEntries();\n  }, []);\n\n  const handleFavoriteClick = async (entryId) => {\n    const entryToUpdate = favoriteEntries.find(entry => entry._id === entryId);\n    const newFavoriteState = !entryToUpdate.favorite;\n    await apiService.updateSingleJournalEntry(entryId, { favorite: newFavoriteState });\n\n    const updatedFavoriteEntries = favoriteEntries.map(entry => {\n      if (entry._id === entryId) {\n        return { ...entry, favorite: newFavoriteState };\n      }\n      return entry;\n    });\n    setFavoriteEntries(updatedFavoriteEntries);\n  };\n\n  return (\n    <div>\n      <p>All your favorite journal entries</p>\n      {favoriteEntries?.length > 0 ? (\n        <div>\n          {favoriteEntries.map((entry) => (\n            <div className='read-journal' key={entry._id}>\n              <div className='journal-and-date'>\n                <p>{entry.content}</p>\n                <p>{entry.created}</p>\n              </div>\n              <p>{entry.mood}</p>\n              <div\n                className={`favorite-icon ${entry.favorite ? 'red-heart' : ''}`}\n                onClick={() => {\n                  handleFavoriteClick(entry._id);\n                }}>\n                <FontAwesomeIcon icon={faHeart} />\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>No favorite entries to display.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Favorites;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}